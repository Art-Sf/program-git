{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww25100\viewh15700\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // Importaci\'f3n de m\'f3dulos\
const express = require("express");\
const mysql = require("mysql");\
const bcrypt = require("bcryptjs");\
const bodyParser = require("body-parser");\
const dotenv = require("dotenv");\
\
dotenv.config();\
\
// Configuraci\'f3n de Express\
const app = express();\
app.use(bodyParser.json());\
\
// Conexi\'f3n a la base de datos MySQL\
const db = mysql.createConnection(\{\
    host: "localhost",\
    user: "root", // Usuario por defecto de XAMPP\
    password: "", // Contrase\'f1a vac\'eda por defecto\
    database: "authDB"\
\});\
\
db.connect(err => \{\
    if (err) throw err;\
    console.log("Conectado a la base de datos MySQL.");\
\});\
\
// Ruta para registrar un usuario\
app.post("/register", (req, res) => \{\
    const \{ username, password \} = req.body;\
\
    // Cifrar la contrase\'f1a antes de guardarla\
    bcrypt.hash(password, 10, (err, hashedPassword) => \{\
        if (err) return res.status(500).json(\{ error: "Error al cifrar la contrase\'f1a" \});\
\
        const query = "INSERT INTO users (username, password) VALUES (?, ?)";\
        db.query(query, [username, hashedPassword], (err, result) => \{\
            if (err) return res.status(500).json(\{ error: "Error al registrar usuario" \});\
\
            res.status(201).json(\{ message: "Usuario registrado correctamente" \});\
        \});\
    \});\
\});\
\
// Ruta para iniciar sesi\'f3n\
app.post("/login", (req, res) => \{\
    const \{ username, password \} = req.body;\
\
    const query = "SELECT * FROM users WHERE username = ?";\
    db.query(query, [username], (err, results) => \{\
        if (err) return res.status(500).json(\{ error: "Error en el servidor" \});\
\
        if (results.length === 0) return res.status(401).json(\{ error: "Usuario no encontrado" \});\
\
        // Comparar contrase\'f1as\
        bcrypt.compare(password, results[0].password, (err, isMatch) => \{\
            if (err) return res.status(500).json(\{ error: "Error en la autenticaci\'f3n" \});\
\
            if (!isMatch) return res.status(401).json(\{ error: "Contrase\'f1a incorrecta" \});\
\
            res.status(200).json(\{ message: "Autenticaci\'f3n satisfactoria" \});\
        \});\
    \});\
\});\
\
// Iniciar el servidor en el puerto 3000\
app.listen(3000, () => \{\
    console.log("Servidor ejecut\'e1ndose en http://localhost:3000");\
\});\
}